<ProductsListRepresentation>:
    orientation: 'horizontal'
    height: 80
    size_hint_y: None
    Label:
        size_hint_x: .7
        id: representation
        background_color: (.92, .91, .92, 1)
        background_normal: ''
        color: (0, 0, 0, 1)
    Label:
        size_hint_x: .3
        text: 'list_box'
        color: (0,0,0,1)

<ProductsList>:
    background: ''
    background_color: (1, 1, 1, 1)
    Screen:
        orientation: 'vertical'
        BoxLayout:
            pos_hint: {'center_x': 0.5, 'top': 1}
            orientation: 'vertical'
            BoxLayout:
                size_hint_y: .08
                Label:
                    canvas.before:
                        Color:
                            rgba: (.16, .80, .37, 1)
                        Rectangle:
                            size: self.size
                            pos: self.pos
                    color: (0, 0, 0, 1)
                    text: 'Products'
            ScrollView:
                size_hint_y:.85
                do_scroll_x: False
                GridLayout:
                    id: products_list
                    cols: 1
                    size_hint_y: None
                    height: self.minimum_height
            BoxLayout:
                size_hint_y: .07
                Button:
                    on_press: root.dismiss()
                    text: 'Back to Lists'
        Button:
            id: add_product_but
            background_down: ''
            background_normal: ''
            text: 'Add'
            pos_hint: {'center_x': 0.80, 'top': 0.318}
            size_hint: (None, None)
            on_press: root.open_all_products_list()


<ProductRepresentation>:
    orientation: 'horizontal'
    height: 50
    size_hint_y: None
    Label:
        id: representation
        size_hint_x: .65
        background_color: (.92, .91, .92, 1)
        background_normal: ''
        color: (0, 0, 0, 1)
    Label:
        id: user
        size_hint_x: .2
        text: 'product'
        color: (0,0,0,1)
    CheckBox:
        id: bought
        size_hint_x: .15
        on_active: root.update_record_bd(True)

<AllProductsList>:
    size_hint: 1, 1
    background: ''
    BoxLayout:
        orientation: 'vertical'
        BoxLayout:
            size_hint_y: .08
            Label:
                canvas.before:
                    Color:
                        rgba: (.16, .80, .27, 1)
                    Rectangle:
                        size: self.size
                        pos: self.pos
                color: (0, 0, 0, 1)
                text: 'All products'
        BoxLayout:
            size_hint_y: .06
            orientation: 'horizontal'
            TextInput:
                id: search
                background_normal: ''
                background_active: ''
                background_color: (1, 1, 1, 1)
                color: (0, 0, 0, 1)
                size_hint_x: 0.9
                text: 'Start typing the product name'
                on_text: root.update_sort()
                on_focus: if self.text == 'Start typing the product name': self.text = ''
            Button:
                background_normal: ''
                background_down: ''
                background_color: (.98, .98, .99, 1)
                size_hint_x: 0.1
                text: "+"
                color: (0, 0, 0, 1)
                on_press: root.add_product()
        BoxLayout:
            size_hint_y: .06
            canvas.before:
                Color:
                    rgba: (.16, .80, .27, 1)
                Rectangle:
                    size: self.size
                    pos: self.pos
            ToggleButton:
                id: popular_sorting
                background_normal: ''
                background_down: ''
                background_color: (.95, .96, .95, 0)
                color: (0, 0, 0, 1)
                group: 'toggle_button_sort'
                text: 'Popular'
                on_press: root.update_sort('popular')
                on_state:
                    if self.state == 'down': self.color = (1, 1, 1, 1)
                    else: self.color = (0, 0, 0, 1)
            ToggleButton:
                id: last_sorting
                background_normal: ''
                background_down: ''
                background_color: (.95, .96, .95, 0)
                color: (0, 0, 0, 1)
                group: 'toggle_button_sort'
                text: 'Last'
                on_press: root.update_sort('last')
                on_state:
                    if self.state == 'down': self.color = (1, 1, 1, 1)
                    else: self.color = (0, 0, 0, 1)
            ToggleButton:
                id: abc_sorting
                background_normal: ''
                background_down: ''
                background_color: (.95, .96, .95, 0)
                color: (0, 0, 0, 1)
                group: 'toggle_button_sort'
                text: 'Abc'
                on_press: root.update_sort('abc')
                on_state:
                    if self.state == 'down': self.color = (1, 1, 1, 1)
                    else: self.color = (0, 0, 0, 1)
        ScrollView:
            size_hint_y: .73
            do_scroll_x: False
            effect_cls: 'DampedScrollEffect'
            on_touch_up: if self.effect_y.overscroll > 50: root.show_more_products()
            GridLayout:
                id: all_products_list
                canvas.before:
                    Color:
                        rgba: (.92, .91, .92, 1)
                    Rectangle:
                        size: self.size
                        pos: self.pos
                cols: 1
                spacing: 5
                size_hint_y: None
                height: self.minimum_height
        BoxLayout:
            size_hint_y: .07
            padding: (0, 1, 0, 0)
            canvas.before:
                Color:
                    rgba: (0.86,0.86,0.88,1)
                Line:
                    width: 1
                    points: [self.pos[0], self.pos[1] + self.size[1], self.pos[0] + self.size[0], self.pos[1] + self.size[1]]
                Color:
                    rgba: (0.96,0.96,0.97,1)
                Line:
                    width: 1
                    points: [self.pos[0], self.pos[1] + self.size[1]-1, self.pos[0] + self.size[0], self.pos[1] + self.size[1]-1]
            background_color: (1, 0, 0, 1)
            Button:
                background_normal: ''
                background_down: ''
                background_color: (.16, .80, .27, 1)  # (.03, .67, .14, 1)  # (.95, .96, .95, 1)
                color: (0, 0, 0, 1)
                on_press: root.dismiss()
                text: 'Complete'

<AllProductRepresentation>:
    orientation: 'horizontal'
    height: 50
    size_hint_y: None
    canvas.before:
        Color:
            rgba: (1, 1, 1, 1)
        Rectangle:
            size: self.size
            pos: self.pos
        Color:
            rgba: (0.90, 0.90 ,0.92 ,1)
        Line:
            width: 1
            points: [self.pos[0], self.pos[1] + self.size[1], self.pos[0] + self.size[0], self.pos[1] + self.size[1]]
        Color:
            rgba: (0.96, 0.96, 0.97 ,1)
        Line:
            width: 1
            points: [self.pos[0], self.pos[1] + self.size[1]-1, self.pos[0] + self.size[0], self.pos[1] + self.size[1]-1]
        Color:
            rgba: (0.92, 0.92, 0.93 ,1)
        Line:
            width: 1
            points: [self.pos[0], self.pos[1] + 2, self.pos[0] + self.size[0], self.pos[1] + 2]
        Color:
            rgba: (0.85, 0.85, 0.86, 1)
        Line:
            width: 1
            points: [self.pos[0], self.pos[1] + 1, self.pos[0] + self.size[0], self.pos[1] + 1]
        Color:
            rgba: (0.91, 0.91, 0.92, 1)
        Line:
            width: 1
            points: [self.pos[0], self.pos[1], self.pos[0] + self.size[0], self.pos[1]]
    Label:
        id: representation
        size_hint_x: .65
        color: (0, 0, 0, 1)
    Label:
        id: units
        size_hint_x: .2
        text: 'all_product'
        color: (0,0,0,1)
    CheckBox:
        id: selected
        size_hint_x: .15
        on_active: root.update_record_bd()

